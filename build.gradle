//빌드 스크립트 내부에 버전, 의존 라이브러리, 저장소를 설정해 스프링 부트 플러그인을 사용할 수 있게 합니다.
buildscript{
    ext{
        springBootVersion = '2.4.5'
    }
    repositories{
        mavenCentral()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//필요한 플러그인을 적용한다.
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

//종속적 관리를 제공하는 플러그인 - 스프링 부트 1.x버전에서는 기본으로 제공했지만 스프링부트 2.0 이상에서는 플러그인 등록을 명시해주어야 한다.
apply plugin: 'io.spring.dependency-management'

/*plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}*/

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //컴파일 전용 종속성 선언 설정으로 기존의 provided와 유사함, 주로 컴파일 시점에만 필요하고 런타임 시점에는 필요없을 때 많이 사용
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //런타임 시점에만 H2를 사용하도록 설정
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
